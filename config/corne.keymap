/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_es.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        BAS {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ã‘  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&lt 0 ESC   &kp W  &kp L  &kp Y  &kp P         &kp B          &kp F          &kp J      &kp O           &kp U      &kp SLASH  &to 5
&caps_word  &kp C  &kp R  &kp S  &kp T         &kp G          &kp M          &kp N      &kp E           &kp I      &kp A      &kp ES_ACUTE
&kp TAB     &kp Q  &kp Z  &kp V  &kp D         &kp K          &kp X          &kp H      &kp ES_N_TILDE  &kp COMMA  &kp DOT    &kp LS(LA(LC(LG(L))))
                          &mo 1  &lt 2 DELETE  &lt 3 ENTER    &kp BACKSPACE  &kp SPACE  &mo 4
            >;
        };

        MED {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp C_PREV             &kp C_STOP     &kp C_PLAY_PAUSE   &kp C_NEXT       &trans    &trans        &trans             &trans           &trans        &trans          &trans
&trans  &kp C_VOLUME_DOWN      &kp C_MUTE     &kp C_MUTE         &kp C_VOLUME_UP  &trans    &trans        &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp LEFT_ALT  &kp RIGHT_META  &trans
&trans  &kp LS(LA(LC(LG(R))))  &kp LS(LG(V))  &kp LS(LA(LC(Q)))  &kp PRINTSCREEN  &trans    &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR
                                              &trans             &trans           &trans    &trans        &trans             &trans
            >;
        };

        NUM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &trans            &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH            &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans               &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                        &trans        &trans        &trans               &trans     &trans     &trans
            >;
        };

        NAV {
            bindings = <
&trans  &kp HOME        &kp PAGE_DOWN  &kp PG_UP     &kp END          &kp INSERT    &trans             &trans     &trans           &trans        &trans          &trans
&trans  &kp LEFT_ARROW  &kp DOWN       &kp UP_ARROW  &kp RIGHT_ARROW  &trans        &trans             &kp RCTRL  &kp RIGHT_SHIFT  &kp LEFT_ALT  &kp RIGHT_META  &trans
&trans  &kp K_UNDO      &kp K_CUT      &kp K_COPY    &kp K_PASTE      &kp K_REDO    &trans             &trans     &trans           &trans        &trans          &trans
                                       &trans        &trans           &trans        &kp LC(BACKSPACE)  &kp DEL    &trans
            >;
        };

        FUN {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8      &kp F9     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &kp C_MENU  &kp SPACE  &trans    &trans  &trans  &trans
            >;
        };

        GA1 {
            bindings = <
&trans  &kp N1    &kp N2          &kp N3        &kp N4     &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp O     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans          &trans        &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans        &kp SPACE  &trans    &trans  &trans  &trans
            >;
        };
    };
};
